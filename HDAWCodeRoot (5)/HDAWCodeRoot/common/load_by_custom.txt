// Common Custom Loader

COMMON "OnError.txt";
COMMON "ChecksumCheck.txt";
COMMON "Loader-INSERT.txt";

function load_by_custom($p) begin
   metatags "load_by_custom";
   $fn_title = "In function load_by_custom, ";
   /* Properties
   $p.call_custom = $NOT_NULL;
   $p.use_db_connect = $NOT_NULL;
   $p.use_db_table = $NOT_NULL;
   $p.use_dwh_table = $NOT_NULL;
   $p.file_to_read = $NOT_NULL;
   $p.file_field_lookup = null;
   $p.file_add_fields = null;
   $p.file_field_process = null;
   $p.file_not_null_fields = null;
   $p.verbose = false;
   $p.checksum_field = null;
   $p.guid = null;
   */
   $use_db_connect = $p.use_db_connect;
   if $use_db_connect is null return return_with_error("{$fn_title} must supply a property use_db_connect");
   $use_db_table = $p.use_db_table;
   if $use_db_table is null return return_with_error("{$fn_title} must supply a property use_db_table");
   $file_to_read = $p.file_to_read;
   if $file_to_read is null return return_with_error("{$fn_title} must supply a property file_to_read");
   $call_custom = $p.call_custom;
   if $call_custom is null return return_with_error("{$fn_title} must supply a custom function name to call (set $call_custom)");
   $file_field_lookup = $p.file_field_lookup;
   $file_field_lookup DEFAULT null;
   $file_add_fields = $p.file_add_fields;
   $file_add_fields DEFAULT null;
   $file_field_process = $p.file_field_process;
   $file_field_process DEFAULT null;
   $file_not_null_fields = $p.file_not_null_fields;
   $file_not_null_fields DEFAULT null;
   $verbose = $p.verbose;
   $verbose DEFAULT false;
   $checksum_field = $p.checksum_field;
   $checksum_field DEFAULT null;
   $file_lines_limit = $p.file_lines_limit;
   $use_file_date = $p.use_file_date;
   $use_dwh_table = $p.use_dwh_table;
   $use_dwh_table DEFAULT $use_db_table;
   $guid = $p.guid;
   $ok = mssql_connect($use_db_connect);
   if $ok is not true then return return_with_error("Failed to open the destination DB for a loader ");
   // Open the checksum method
   do_open_checksum($checksum_field, $guid);
   $aa = call_function($call_custom, $file_to_read);
   if is_array($aa) is not true return return_with_error("{$fn_title} unable to custom load via {$call_custom}");
   $rows = count_properties($aa);
   console("{$fn_title} Extracted {$rows} records");
   $file_lines = 0;
   for all properties $row in $aa begin
 	  if ($file_lines_limit is null) or ($file_lines is < $file_lines_limit) begin
	     $p.record = $aa.$row;
         if loader_insert($p) is true $file_lines = $file_lines+1;
		 end
      end


   check_checksum(close_write_checksum($checksum_field, $guid), $checksum_field, $guid, $file_lines, $use_db_table, $file_field_lookup); 

   // And close off the destination
   mssql_close();
   return $file_lines;
   end






