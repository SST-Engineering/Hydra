// Common JSON Loader

COMMON "OnError.txt";
COMMON "ChecksumCheck.txt";
COMMON "Loader-INIT.txt";
COMMON "Loader-INSERT.txt";

function load_from_json($p) begin
   metatags "load_from_json";
   $fn_title = "In function load_from_json, ";
   /* Properties
   $p.use_db_connect = $NOT_NULL;
   $p.use_db_table = $NOT_NULL;
   $p.use_dwh_table = $NOT_NULL;
   $p.file_to_read = $NOT_NULL;
   $p.file_record_tag = $NOT_NULL;
   $p.file_field_lookup = null;
   $p.file_add_fields = null;
   $p.file_field_process = null;
   $p.file_not_null_fields = null;
   $p.truncate_table = true;
   $p.create_table = false;
   $p.verbose = false;
   $p.checksum_field = null;
   $p.use_file_date = null;
   $p.guid = null;
   */
   $use_db_connect = $p.use_db_connect;
   if $use_db_connect is null return return_with_error("{$fn_title} must supply a property use_db_connect");
   $use_db_table = $p.use_db_table;
   if $use_db_table is null return return_with_error("{$fn_title} must supply a property use_db_table");
   $file_to_read = $p.file_to_read;
   if $file_to_read is null return return_with_error("{$fn_title} must supply a property file_to_read");
   $file_record_tag = $p.file_record_tag;
   if $file_record_tag is null return return_with_error("{$fn_title} must supply a tag to indicate record block (set $file_record_tag)");
   $file_field_lookup = $p.file_field_lookup;
   $file_field_lookup DEFAULT null;
   $file_add_fields = $p.file_add_fields;
   $file_add_fields DEFAULT null;
   $file_field_process = $p.file_field_process;
   $file_field_process DEFAULT null;
   $file_not_null_fields = $p.file_not_null_fields;
   $file_not_null_fields DEFAULT null;
   $use_dwh_table = $p.use_dwh_table;
   $use_dwh_table DEFAULT $use_db_table;
   $use_file_date = $p.use_file_date;
   $verbose = $p.verbose;
   $verbose DEFAULT false;
   $checksum_field = $p.checksum_field;
   $checksum_field DEFAULT null;
   $file_lines_limit = $p.file_lines_limit;
   $guid = $p.guid;
   loader_check($use_db_connect, $use_db_table, $file_to_read);
   // Open the checksum method
   do_open_checksum($checksum_field, $guid);

	$file_lines = 0;
	$base_fields = null;
	$json = file_get_contents($file_to_read);
	$a = json_parse($json);
	for all properties $k in $a begin
		if $k is $file_record_tag begin
			for all properties $i in $a.$file_record_tag begin
				$record = $base_fields;
				for all properties $kk in $a.$file_record_tag.$i begin
					$record.$kk = $a.$file_record_tag.$i.$kk;
					end
				$p.record = $record;
				if ($file_lines_limit is null) OR ($file_lines is < $file_lines_limit) begin
					if loader_insert($p) is true $file_lines = $file_lines+1;
					end
				end
			end
		else $base_fields.$k = $a.$k;
		end



   check_checksum(close_write_checksum($checksum_field, $guid), $checksum_field, $guid, $file_lines, $use_db_table, $file_field_lookup); 

   // And close off the destination
   mssql_close();
   return $file_lines;
   end






